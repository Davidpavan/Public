name: 'Helm'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  Helm_Template:
    runs-on: ubuntu-latest
    steps:
      - uses: helm/kind-action@v1.3.0
      - uses: actions/checkout@master
      - name: kind 
        run: |
         kubectl get pods -n kube-system
  Helm_Lint:
    environment: 'dev'
    runs-on: ubuntu-latest
    steps:
      - uses: helm/kind-action@v1.3.0
      - uses: actions/checkout@master
      - name: Helm Lint
        run: |
         helm install --dry-run --debug zelar zelar
  Helm_Deploy:
    needs: [Helm_Template, Helm_Lint, K8s_Static_code_analysis, Helm-Audit, kubespec]
    environment: 'prod'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: helm/kind-action@v1.3.0
      - uses: actions/checkout@master
      - name: Helm Lint
        run: |
         helm install --dry-run --debug zelar zelar 
         
  K8s_Static_code_analysis:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2
      - name: Setup polaris
        uses: fairwindsops/polaris/.github/actions/setup-polaris@master
        with:
         version: 5.0.0
      - name: Use command
        run: |
         polaris audit --audit-path zelar --format=pretty
  Helm-Audit:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - uses: bridgecrewio/checkov-action@maste
      - name: Test with Checkov
        id: checkov
        run: |
          checkov -d zelar --framework helm --no-guide --quiet --compact --var-file zelar/values.yaml -c CKV_K8S_15

#         with:
#           directory: zelar/templates 
#           framework: helm
#       - name: Upload Kubesec scan results to GitHub Security tab
#         uses: github/codeql-action/upload-sarif@v2
#         with:
#           sarif_file: results.sarif
  kubespec:
    needs: [ Helm-Audit]
    name: Kubesec
    runs-on: ubuntu-20.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run kubesec scanner
        uses: controlplaneio/kubesec-action@43d0ddff5ffee89a6bb9f29b64cd865411137b14
        with:
          input: zelar/templates/deployment.yaml   # specify configuration file to scan here
          format: template
          template: template/sarif.tpl
          output: kresults.sarif
          exit-code: "0"

#       - name: Upload Kubesec scan results to GitHub Security tab
#         uses: github/codeql-action/upload-sarif@v2
#         with:
#           sarif_file: kresults.sarif
